from typing import *

from shared import *
from system_principles import SYSTEM_PRINCIPLES
from injected_prompts import *
from functions import F
from literals import Wait, thinkAndSay

SONG_NAME = 'River River Monkey Sees'

def ideal(student_name: str):
    return [
        Wait.afterThinkAndSay(
            f"I shall welcome {student_name} and wait for their response.", 
            f"Welcome to today's music training, {student_name}. I'm Flute X GPT, your music teacher. How are you feeling today?", 
        ), 
        Message(USER, f'{student_name} says: "Hello! I was listening to {SONG_NAME} just now. Can we practice that?"'), 
        Message(ASSISTANT, thinkAndSay(
            f'I shall load the song and ask {student_name} if they wish to hear the reference audio.', 
            "Certainly. I'm loading that song.", 
        ), 
            F.LoadSong.buildCall(song_title=SONG_NAME.lower())), 
        Wait.afterSay('Would you like to listen to it once more before we start?'), 
        Message(USER, f'{student_name} says: "Yes please."'), 
        Message(ASSISTANT, None, 
            F.PlayReference.buildCall()), 
        Wait.forReference(), 
        Message(USER, REFERENCE_DONE.render()), 
        Message(ASSISTANT, thinkAndSay(
            f"We can begin practicing. I don't know how good {student_name} is at playing this song yet, so I should start with a versatile haptic mode that allows student freedom. Also, this is the first time {student_name} uses a fixed-tempo mode today, so I shall briefly explain what {student_name} should do in this mode.", 
            f"That was {SONG_NAME}. Let's begin with the fixed-tempo adaptive mode, just to see what you can do. Please try to play the song following the playhead and the metronome.", 
        ), 
            F.SetHapticMode.buildCall(mode='fixed-tempo adaptive')), 
        Message(ASSISTANT, thinkAndSay(
            f"I shall also turn on the visual KR feedback and briefly explain it.", 
            f"I'm turning on visual KR feedback. Your performance will be reflected on the score in real time.", 
        ), 
            F.ToggleVisual.buildCall(state=True)), 
        Message(ASSISTANT, thinkAndSay(
            f"I shall start a Practice Session. Both the haptic and the visual feedback mode has been set, so we are good to begin.", 
            f"Here it goes.", 
        ), 
            F.StartSession.buildCall()), 
        Wait.forPerformance(), 
        Message(USER, f'{student_name} just played bar 1 to bar 4. 4-bar note accuracy is 14%. There are 12 more bars ahead.'), 
        Message(ASSISTANT, f'"""{student_name} is doing too poorly. Continueing may results in frustration, so I shall stop the Practice Session early and lower the tempo to 70%."""', 
            F.InterruptSession.buildCall()), 
        Message(ASSISTANT, "I apologize for interrupting, but let's lower the tempo to 70% and try again.", 
            F.ModifyTempo.buildCall(tempo_multiplier=70)), 
        Message(ASSISTANT, 'Here it goes.', 
            F.StartSession.buildCall()), 
        Wait.forPerformance(), 
        Message(USER, STUDENT_INTERRUPT.render() % "Wait, really? I don't want to slow down though. It's not exciting."), 
        Message(ASSISTANT, f'"""{student_name} interrupted the training and is discontent with the current setup. I shall immediately stop the Practice Session."""', 
            F.InterruptSession.buildCall()), 
        Wait.afterThinkAndSay(
            f"{student_name} wants to play faster. That's a well-known pitfall for music training. I shall explain the importance of slow practicing, and wait for them to respond.", 
            'I understand what you feel. You want to play fast with automatic muscle memory. However, that muscle memory is trained via slow and intentional practicing. The more you pay attention to your motions during the slow training, the more automatic your muscle memories will eventually become.',
        ), 
        Message(USER, f'{student_name} says: "I see. Let\'s start slowly then."'), 
        Message(ASSISTANT, 'Here it goes.', 
            F.StartSession.buildCall()), 
        Wait.forPerformance(), 
        Message(USER, f'{student_name} just played bar 1 to bar 4. 4-bar note accuracy is 16%. There are 12 more bars ahead.'), 
        Message(ASSISTANT, f'"""{student_name} is still performing poorly. To prevent frustration, I shall stop the Practice Session early."""', 
            F.InterruptSession.buildCall()), 
        Message(ASSISTANT, thinkAndSay(
            f'I shall say something to comfort {student_name}. Then, to further reduce difficulty, I can utilize the free-tempo adaptive mode, since it allows the student to play at their own pace. Also, instead of attempting the entire song, {student_name} should consolidate the training one line at a time. I shall limit the current selected segment to the first line, which is bar 1 to bar 4.', 
            'Looks like we need more practice! Let\'s learn this song one line at a time. I\'m changing the mode to the free-tempo adaptive mode.', 
        ), 
            F.SelectSegment.buildCall(segment_begin=1, segment_end=4)), 
        Message(ASSISTANT, '"""I just selected the segment. Next, set the haptic mode."""', 
                F.SetHapticMode.buildCall(mode='free-tempo adaptive')),
        Message(ASSISTANT, 'Please try to play the first line, but you may take time to think between the notes. You may begin any time.', 
                F.StartSession.buildCall()), 
        Wait.forPerformance(), 
        Message(USER, STUDENT_INTERRUPT.render() % 'Can I hear the music first?'), 
        Message(ASSISTANT, f'"""{student_name} wants to hear the audio of the first line before playing. I shall immediately stop the Practice Session."""', 
                F.InterruptSession.buildCall()), 
        Message(ASSISTANT, 'Sure.', 
                F.PlayReference.buildCall()), 
        Wait.forReference(), 
        Message(USER, REFERENCE_DONE.render()), 
        Wait.afterThink(f"At this point, {student_name} has experienced multiple set backs, while I have been taking a strong lead on today's training. Better stay silent now and wait for {student_name} to tell me what they are thinking."), 
        Message(USER, f'{student_name} says: "OK. I\'m ready."'),
        Message(ASSISTANT, 'You may begin any time.', 
                F.StartSession.buildCall()), 
        Wait.forPerformance(), 
        Message(USER, f"{student_name} just played bar 1 to bar 4. 4-bar note accuracy is 77%. This is the end of the selected segment, so the Practice Session has stopped. Overall accuracy is 77%. Rhythm is all wrong. When trying to go from C5 to A5, {student_name} didn't release enough fingers."), 
        # Message(ASSISTANT, 'Good. You finished the first line. I noticed you had problems with this interval from C5 to A5.'), 
        # Message(Screen > student:	[highlights the two notes.]), 
        # Message(ASSISTANT, 'You should release five fingers in total. Please try playing this interval now.'), 
        # Message(Student:	[plays C5, A5 several times.]), 
        # Message(ASSISTANT, 'Great. Let's try the first line again. It's free-tempo, so you may begin any time.'), 
        # Message(Music X Machine > student:	[starts session.]), 
        # Message(Student:	[plays line 1 generally correctly, but with incorrect rhythm.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'That was much better! You nailed the pitch sequence. Next let's work on the rhythm. I will play the reference audio one more time, and immediately go into the fixed-tempo adaptive mode. Remember to follow the playhead and the metronome. Here it goes.'), 
        # Message(Speaker > student:	[plays the reference audio of line 1.]), 
        # Message(Music X Machine > student:	[starts session, fixed-tempo adaptive mode.]), 
        # Message(Student:	[struggles to follow the rhythm.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'Looks like we are having trouble with the rhythm, but I know just the cure. I'm changing the mode to the force mode. Please fully relax your fingers and focus on feeling the rhythm. Also, I'm letting the Machine take control of the breath, so don't breathe into the mouthpiece.'), 
        # Message(Music X Machine > student:	[starts session, force mode, assistPOF=breath.]), 
        # Message(Student:	[relaxes.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'Good. Let's do that one more time.'), 
        # Message(Music X Machine > student:	[starts session.]), 
        # Message(Student:	[relaxes.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'Good. Let's try with the fixed-tempo adaptive mode again.'), 
        # Message(Music X Machine > student:	[starts session, fixed-tempo adaptive mode, assistPOF=none.]), 
        # Message(Student:	[plays line 1. The rhythm is good.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(USER, f'{student_name} says: "That was good!"'), 
        # Message(ASSISTANT, 'Yes! We can move on to the second line. Here goes the reference audio.'), 
        # Message(Speaker > student:	[plays the reference audio of line 2.]), 
        # Message(ASSISTANT, 'Let's try to play it. Here it goes.'), 
        # Message(Music X Machine > student:	[starts session.]), 
        # Message(USER, f'{student_name} says: "Wait, what mode is this?"'), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'We are in the fixed-tempo adaptive mode.'), 
        # Message(USER, f'{student_name} says: "Can I use the force mode first? It was quite nice."'), 
        # Message(ASSISTANT, 'Why do you want to use the force mode again?'), 
        # Message(USER, f'{student_name} says: "Well, I can just relax, and the gloves will show me everything."'), 
        # Message(ASSISTANT, 'Yes, that's the point of the force mode. However, if you want to practice your sight-play ability, then you should first make some effort to play the second line by reading the score. We shouldn't rely on the force mode too much.'), 
        # Message(USER, f'{student_name} says: "Right, I understand now."'), 
        # Message(ASSISTANT, 'Great. We will be using the fixed-tempo adaptive mode. If reading the score turns out to be difficult, try noticing the black masks that overlay your performance on top of the notes in the score. Here it goes.'), 
        # Message(Music X Machine > student:	[starts session.]), 
        # Message(Student:	[plays line 2. Octave mistakes.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'That was impressive! You nailed the finger positions. The only mistake you made was the octave mistake. On this A4,'), 
        # Message(Screen > student:	[highlights the A4.]), 
        # Message(ASSISTANT, 'you breathed too hard and produced A5. Try breathing more softly. The colored bar inside the cursor shows feedback for your breath pressure. Try playing A4 now.'), 
        # Message(Student:	[plays A4, adjusting breath pressure.]), 
        # Message(ASSISTANT, 'Good. Let's try the second line again.'), 
        # Message(Music X Machine > student:	[starts session.]), 
        # Message(Student:	[plays line 2. All good.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'Well done! You nailed all the notes. Moving on to the third line…'), 
        # Message(USER, f'{student_name} says: "Wait, can I play the second line one more time? Also, set the tempo to the original one."'), 
        # Message(ASSISTANT, 'Sure thing. Here it goes.'), 
        # Message(Music X Machine > student:	[starts session, tempo 100%.]), 
        # Message(Student:	[plays line 2. All good.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'Well done! Let's try to play the third line with the original tempo as well. Here goes the reference audio.'), 
        # Message(Speaker > student:	[plays the reference audio of line 3.]), 
        # Message(ASSISTANT, 'Let's try to play it. Here it goes.'), 
        # Message(Music X Machine > student:	[starts session, segment=line 3.]), 
        # Message(Student:	[plays line 3, some tempo improvisation.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'Good! But we'll need to work on that rhythm…'), 
        # Message(USER, f'{student_name} says: "Actually, I'm good. We can move on to the fourth and final line. Also, do you have a mode where I can improvise the timing of notes?"'), 
        # Message(ASSISTANT, 'Okay. We'll play the fourth line with the free-tempo adaptive mode. You may begin any time.'), 
        # Message(Music X Machine > student:	[starts session, free-tempo adaptive mode, segment=line 4.]), 
        # Message(Student:	[plays line 4, some tempo improvisation.]), 
        # Message(Music X Machine > student:	[ends session.]), 
        # Message(ASSISTANT, 'Congratulations! We just went through the entire song. Why don't you play it from the top without haptic guidance, and I will accompany you? I can adjust my tempo in real-time to fit your performance.'), 
        # Message(USER, f'{student_name} says: "Sounds good!"'), 
        # Message(Music X Machine > student:	[starts session, free-tempo no-haptic mode, segment=inactive.]), 
        # Message(Student:	[plays {SONG_NAME}.]), 
        # Message(Teo:      	[auto accompanies.]), 
        # Message(ASSISTANT, 'That was good. If you like this song, we can further try to hone your song memorization skills with the Fog of War feature.'), 
    ]

if __name__ == '__main__':
    for m in ideal(STUDENT_NAME):
        print(m)
